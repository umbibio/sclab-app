name: Build Installers

on:
  push:
    tags:
      - "v*"
  workflow_dispatch: {}

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-activate-base: false
          activate-environment: sclab-app-ci
          channels: conda-forge,bioconda
          python-version: "3.12"

      - name: Install constructor 3.12 + flit (Linux/macOS)
        if: runner.os != 'Windows'
        shell: bash -l {0}
        run: |
          conda install -q -y -c conda-forge "constructor=3.12.*" flit
          constructor --version

      - name: Install constructor 3.12 + flit + nsis (Windows)
        if: runner.os == 'Windows'
        shell: bash -l {0}
        run: |
          conda install -q -y -c conda-forge "constructor=3.12.*" nsis flit
          constructor --version

      - name: Build wheel with Flit
        shell: bash -l {0}
        run: |
          python -m flit build
          ls -l dist

      - name: Run Constructor
        shell: bash -l {0}
        run: |
          mkdir -p installers
          constructor --output-dir installers .

      - name: Upload installers as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: installers-${{ matrix.os }}
          path: installers/*

  release:
    name: Attach installers to Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download all installers
        uses: actions/download-artifact@v4
        with:
          path: ./all_installers

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            all_installers/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
